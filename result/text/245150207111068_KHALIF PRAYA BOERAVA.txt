LAPORAN PRAKTIKUM PEMROGRAMAN DASAR BAB :   SELEKSI KONDISI NAMA :   Khalif Praya Boerava NIM :   245150207111068 ASISTEN :   BRAHMANTIO JATI PAMBUDI      ARARYA PRAMADANI ALIEF RAHMAN TGL PRAKTIKUM :   03/10/2024  
 
 
 
 
   
 2.5 Data dan Analisis Hasil Percobaan 2.5.1 Conditional Statement Pertanyaan 1. Jalankan file constAss.java dan benahi jika menemukan kesalahan! Syntax  public class contsAss {     public static void main(String[] args) {         String s = "filkom";         String val = (s=="filkom")?"Brawijaya": "null";         System.out.println(s+" "+val);     } }  Screenshot 
 Penjelasan Setelah syntax nya di jalan kan tidak menemukan kesalahan Pertanyaan 2. Ubah kode di atas pada baris ke empat dengan mengubah type data String menjadi int, amati yang terjadi kemudian jelaskan! Syntax  public class contsAss {     public static void main(String[] args) {         String s = "filkom";         int val = (s=="filkom")?"Brawijaya": "null";         System.out.println(s+" "+val);     } }  Screenshot 
 Penjelasan Syntax yang di run setelah di ubah string menjadi int tidak berhasil di run karena int tidak bisa bekerja jika di gabung dengan string di baris sebelumnya dan karena int untuk mengitung angka bukan buat kalimat  Pertanyaan  3. Tambahkan kode di bawah baris 5 dengan menambahkan program yang meminta input user dengan memasukkan nama dan nim masing-masing mahasiswa dan jika benar maka akan mencetak nama dan nim mahasiswa, jika salah maka mencetak “input nama salah” jika memasukkan nama yang salah, “input nim salah” jika memasukka nim yang salah. Syntax   import java.util.Scanner; public class contsAss {     public static void main(String[] args) {         //String s = "filkom";         //String val = (s=="filkom")?"Brawijaya": "null";         //System.out.println(s+" "+val);          String nama = ("khalif praya boerava");         String nim = ("245150207111068");         Scanner input = new Scanner(System.in);          System.out.print("namaku : ");         String namaku = input.nextLine();         System.out.print("nimku : ");         String nimku = input.nextLine();                  String namame = (namaku.equals(nama)) ? namaku :"input nama salah"; 
        String nimme = (nimku.equals(nim)) ? nimku :"input nim salah";          System.out.println(namame);         System.out.println(nimme);     } }  Screenshot  
 Penjelasan Sebuah program yang meminta input dari pengguna berupa nama dan NIM mahasiswa. Jika input yang dimasukkan benar, program akan menampilkan nama dan NIM mahasiswa tersebut. Namun, jika pengguna memasukkan nama yang salah, program akan menampilkan pesan "nama yang dimasukkan salah". Jika pengguna memasukkan NIM yang salah, program akan menampilkan pesan "NIM yang dimasukkan salah".  Pertanyaan  4. Buat program yang meminta untuk memasukkan nama dan password kemudian program akan meminta user untuk memasukkan nama dan password sesuai input sebelumnya. Jika benar maka program akan mencetak informasi biodata mahasiswa dan jika salah maka program akan mencetak “data tak ditemukan”.  Syntax   import java.util.Scanner; public class contsAss {     public static void main(String[] args) {         //String s = "filkom";         //String val = (s=="filkom")?"Brawijaya": "null";         //System.out.println(s+" "+val); 
         String nama = ("khalif praya boerava");         String pw = ("laprak");         Scanner input = new Scanner(System.in);          System.out.print("namaku : ");         String namaku = input.nextLine();         System.out.print("nimku : ");         String pwku = input.nextLine();                  String namame = (namaku.equals(nama)) ? namaku :"input nama salah";         String pwme = (pwku.equals(pw)) ? pwku :"input pw salah";          System.out.println(namame);         System.out.println(pwme);     } }  Screenshot  
 Penjelasan  Kurang lebih sama dengan nomor 3 tetapi “nim” nya di ubah menjadi password  2.5.2 If else Pertanyaan  5. Jalankan file seleksi1.java dan benahi jika menemukan kesalahan!   
    Syntax       import java.util.Scanner;  public class seleksi1 {     public static void main(String[] args){         Scanner in = new Scanner(System.in);         System.out.print("masukkan nilai: ");         int nilai = in.nextInt();         if (nilai > 60)             System.out.println("Anda lulus");         else if (nilai >= 40)             System.out.println("Anda harus mengulang !");         else{             System.out.println("Anda gagal");         }     } }  Screenshot  
 Penjelasan Syntax saat dijalankan berhasil dan mengalami error  Pertanyaan  
6. Masukkan nilai 30, 60 dan 80 saat program dijalankan, dan jawablah dengan screenshot hasil keluaran dari program!   Syntax       import java.util.Scanner;  public class seleksi1 {     public static void main(String[] args){         Scanner in = new Scanner(System.in);         System.out.print("masukkan nilai: ");         int nilai = in.nextInt();         if (nilai > 60)             System.out.println("Anda lulus");         else if (nilai >= 40)             System.out.println("Anda harus mengulang !");         else{             System.out.println("Anda gagal");         }     } }  Screenshot     Penjelasan    Pertanyaan  7. Pada baris 9, ubahlah kode program menjadi System.out.println("Nilai kurang!");, pengaruh apa yang ditimbulkan setelah dilakukan pengubahan kode di atas! Syntax       import java.util.Scanner;  public class seleksi1 {     public static void main(String[] args){         Scanner in = new Scanner(System.in);         System.out.print("masukkan nilai: ");         int nilai = in.nextInt();         if (nilai > 60)             System.out.println("Anda lulus");         else if (nilai >= 40) 
            System.out.println("Anda harus mengulang !");         else{             System.out.println("Nilai kurang!");         }     } }  Screenshot   Penjelasan Perubahan yang terjadi Ketika di ubah menjadi “Nilai kurang!” adalah hasil tampil yang berubah bukan penentu ia lulus, harus mengulang, atau gagal.   2.5.3 Nested If Pertanyaan  8. Jalankan file seleksi2.java dan benahi jika menemukan kesalahan! Syntax   package PRAKTIKUM;      import java.util.Scanner;  public class seleksi2 {     public static void main(String[] args) {         Scanner in = new Scanner(System.in);         System.out.print("masukkan nilai: ");         int nilai = in.nextInt();          if (nilai * 2 < 50) {             nilai += 10;         }          if (nilai <= 20) {             System.out.println("Filkom");             if (nilai % 2 == 1) {                 System.out.println("UB");             } else {                 System.out.println("Brawijaya");             }         } else {             System.out.println("PTIIK");             if (nilai % 2 == 1) {                 System.out.println("UB");             } else {                 System.out.println("Brawijaya");             }         } 
    } }  Screenshot  
 Penjelasan  Setelah di jalankan syntaxnya tidak menemukan error   Pertanyaan  9. Masukkan nilai 5, 20, 30 saat program dijalankan, jelaskan alur jalan program dan beri screenshot keluaran dari program! Syntax   package PRAKTIKUM;      import java.util.Scanner;  public class seleksi2 {     public static void main(String[] args) {         Scanner in = new Scanner(System.in);         System.out.print("masukkan nilai: ");         int nilai = in.nextInt();          if (nilai * 2 < 50) {             nilai += 10;         }          if (nilai <= 20) {             System.out.println("Filkom");             if (nilai % 2 == 1) { 
                System.out.println("UB");             } else {                 System.out.println("Brawijaya");             }         } else {             System.out.println("PTIIK");             if (nilai % 2 == 1) {                 System.out.println("UB");             } else {                 System.out.println("Brawijaya");             }         }     } }  Screenshot     Penjelasan  Program ini meminta pengguna untuk memasukkan sebuah nilai, kemudian memprosesnya melalui beberapa kondisi. Jika hasil perkalian nilai dengan 2 kurang dari 50, nilai akan ditambah 10. Setelah itu, jika nilai yang sudah diubah tersebut kurang dari atau sama dengan 20, program akan mencetak "Filkom". Selanjutnya, program memeriksa apakah nilai tersebut ganjil atau genap; jika ganjil, akan mencetak "UB", jika genap mencetak "Brawijaya". Jika nilai lebih dari 20, program akan mencetak "PTIIK" dan kemudian kembali mengecek apakah nilai ganjil atau genap untuk mencetak "UB" atau "Brawijaya".  Pertanyaan  10. Ubah kode di atas dengan memanfaatkan operasi and! Syntax   package PRAKTIKUM;      import java.util.Scanner;  public class seleksi2 {     public static void main(String[] args) {         Scanner in = new Scanner(System.in);         System.out.print("masukkan nilai: ");         int nilai = in.nextInt();          if (nilai * 2 < 50) { 
            nilai += 10;         }          if (nilai <= 20 && nilai % 2 == 1) {             System.out.println("Filkom");             System.out.println("UB");          } else if (nilai <= 20 && nilai % 2 == 0) {             System.out.println("Filkom");             System.out.println("Brawijaya");         } else if (nilai > 20 && nilai % 2 == 1) {             System.out.println("PTIIK");             System.out.println("UB");         } else {             System.out.println("PTIIK");             System.out.println("Brawijaya");             }         }     }  Screenshot  
 Penjelasan  Operator && digunakan untuk memastikan dua kondisi terpenuhi sekaligus. Misalnya, pada kondisi if (nilai <= 20 && nilai % 2 == 1), program hanya akan mengeksekusi blok kode jika nilai kurang dari atau sama dengan 20 dan nilainya ganjil. Jika salah satu kondisi tidak terpenuhi, program akan memeriksa kondisi lain. Ini memberikan kontrol lebih ketat dalam menentukan kapan suatu blok kode dijalankan.  
2.5.4 Switch case Pertanyaan  11. Jalankan file seleksi3.java dan benahi jika menemukan kesalahan! Syntax   package PRAKTIKUM;      import java.util.Scanner;  public class seleksi3 {     public static void main(String[] args) {         Scanner in = new Scanner(System.in);         int uang;         System.out.println("Tipe Mata uang yang tersedia");         System.out.println("1. Dolar - USA (kurs USD 1 = Rp 8000,-)");         System.out.println("2. Yen - Jepang (kurs JPY 1 = Rp 4000,-)");         System.out.println("3. Poundsterling - Inggris (kurs 1 Poundsterling = Rp. 10.500, -)");         System.out.println("4. Euro - MEE (kurs EUR 1 = Rp. 8000,- )");         System.out.println("5. Riyal - Arab Saudi (kurs 1 Riyal = Rp. 1100,-)");         System.out.print("Masukkan jenis mata uang anda: ");         int pilihan = in.nextInt();         switch (pilihan) {             case 1:                 System.out.println("Data diterima, jenis valuta Anda: Dolar Amerika Serikat");                 System.out.print("Masukkan banyak uang anda(dalam dolar): ");                 uang = in.nextInt();                 System.out.println("Uang yang diterima: Rp " + (uang*8000) + ",-");                 break;             case 2:                 System.out.println("Data diterima, jenis valuta Anda: Yen Jepang");                 System.out.print("Masukkan banyak uang anda(dalam Yen): ");                 uang = in.nextInt();                 System.out.println("Uang yang diterima: Rp " + (uang*4000) + ",-");                 break;             case 3:                 System.out.println("Data diterima, jenis valuta Anda: Poundsterling Inggris");                 System.out.print("Masukkan banyak uang anda(dalam dolar): ");                 uang = in.nextInt();                 System.out.println("Uang yang diterima: Rp " + (uang*10500) + ",-");                 break;             case 4:                 System.out.println("Data diterima, jenis valuta Anda: Euro MEE");                 System.out.print("Masukkan banyak uang anda(dalam Euro): ");                 uang = in.nextInt();                 System.out.println("Uang yang diterima: Rp " + (uang*8000) + ",-");                 break;             case 5:                 System.out.println("Data diterima, jenis valuta Anda: Riyal Arab Saudi");                 System.out.print("Masukkan banyak uang anda(dalam Riyal): ");                 uang = in.nextInt();                 System.out.println("Uang yang diterima: Rp " + (uang*1100) + ",-");                 break;             default:                 System.out.println("data tak ditemukan");         }     } }  Screenshot   Penjelasan  Syntax yang di jalankan berjalan dengan lancer dan tidak mengalami syntax error  Pertanyaan  12. Pada baris 18,22,26,30 dan 34 hapus kode break, pengaruh apa yang terjadi setelah pengubahan kode tersebut! Syntax   package PRAKTIKUM;      import java.util.Scanner;  public class seleksi3 {     public static void main(String[] args) {         Scanner in = new Scanner(System.in);         int uang; 
        System.out.println("Tipe Mata uang yang tersedia");         System.out.println("1. Dolar - USA (kurs USD 1 = Rp 8000,-)");         System.out.println("2. Yen - Jepang (kurs JPY 1 = Rp 4000,-)");         System.out.println("3. Poundsterling - Inggris (kurs 1 Poundsterling = Rp. 10.500, -)");         System.out.println("4. Euro - MEE (kurs EUR 1 = Rp. 8000,- )");         System.out.println("5. Riyal - Arab Saudi (kurs 1 Riyal = Rp. 1100,-)");         System.out.print("Masukkan jenis mata uang anda: ");         int pilihan = in.nextInt();         switch (pilihan) {             case 1:                 System.out.println("Data diterima, jenis valuta Anda: Dolar Amerika Serikat");                 System.out.print("Masukkan banyak uang anda(dalam dolar): ");                 uang = in.nextInt();                 System.out.println("Uang yang diterima: Rp " + (uang*8000) + ",-");                              case 2:                 System.out.println("Data diterima, jenis valuta Anda: Yen Jepang");                 System.out.print("Masukkan banyak uang anda(dalam Yen): ");                 uang = in.nextInt();                 System.out.println("Uang yang diterima: Rp " + (uang*4000) + ",-");                              case 3:                 System.out.println("Data diterima, jenis valuta Anda: Poundsterling Inggris");                 System.out.print("Masukkan banyak uang anda(dalam dolar): ");                 uang = in.nextInt();                 System.out.println("Uang yang diterima: Rp " + (uang*10500) + ",-");                              case 4:                 System.out.println("Data diterima, jenis valuta Anda: Euro MEE");                 System.out.print("Masukkan banyak uang anda(dalam Euro): ");                 uang = in.nextInt();                 System.out.println("Uang yang diterima: Rp " + (uang*8000) + ",-");                              case 5:                 System.out.println("Data diterima, jenis valuta Anda: Riyal Arab Saudi");                 System.out.print("Masukkan banyak uang anda(dalam Riyal): ");                 uang = in.nextInt();                 System.out.println("Uang yang diterima: Rp " + (uang*1100) + ",-");                              default:                 System.out.println("data tak ditemukan");         }     } }  Screenshot   Penjelasan  Jika kode break di hapuskan maka yang akan terjadi adalah syntax akan menjalan terus sampai sudah mencapai akhir dari list yang di buat. Dalam syntax ini jika mulai dari dollar maka syntax akan berlanjut sampai riyal.  Pertanyaan  13. Apa perbedaan seleksi kondisi dengan menggunakan switch case dan if-else, dan kapan kita harus menggunakan if-else dan kapan menggunakan switch case? Syntax   public class SwitchCaseIfElse {     public static void main(String[] args) {         int number = 10;          /*          * If Else          */          if (number == 10) {             System.out.println("Sepuluh");         } else if (number == 20) {             System.out.println("Dua puluh");         } else {             System.out.println("Lainnya");         }          /*          * Switch Case 
         */          switch (number) {             case 10:                 System.out.println("Sepuluh");                 break;             case 20:                 System.out.println("Dua puluh");             default:                 System.out.println("Lainnya");                 break;         }     } }  Screenshot  
 Penjelasan  Perbedaan utama antara switch-case dan if-else terletak pada cara mereka menangani kondisi. If-else digunakan ketika kondisi yang diperiksa melibatkan ekspresi logis atau perbandingan kompleks, seperti rentang nilai atau kombinasi beberapa kondisi. If-else lebih fleksibel karena bisa digunakan untuk berbagai jenis kondisi yang rumit. Di sisi lain, switch-case digunakan ketika kondisi hanya membandingkan satu variabel dengan nilai konstan tertentu, seperti integer, string, atau enum. Switch-case lebih mudah dibaca dan digunakan ketika ada banyak kondisi yang harus diperiksa dengan satu variabel tunggal yang memiliki nilai tetap. Dalam hal ini, switch-case lebih sederhana dan memberikan struktur kode yang lebih bersih. Penggunaan if-else cocok untuk situasi dengan kondisi logis yang rumit, sementara switch-case lebih tepat digunakan untuk memeriksa nilai diskrit yang sudah pasti.  
 2.5.5 Tugas Praktikum 1. Buatlah program sebagai berikut dengan menggunakan metode switch case  Syntax   package PRAKTIKUM;  import java.util.Scanner;  public class TPraktikum1 {     // utk hitung l n p persegi panjang     public static void persegiPanjang(double panjang, double lebar) {         double luas = panjang * lebar;         double keliling = 2 * (panjang + lebar);         System.out.printf("Luas persegi panjang: %.2f cm2\n", luas);         System.out.printf("Keliling persegi panjang: %.2f cm\n", keliling);     }      // utk itung l n k lingkaran     public static void lingkaran(double radius) {         double luas = Math.PI * radius * radius;         double keliling = 2 * Math.PI * radius;         System.out.printf("Luas lingkaran: %.2f cm2\n", luas);         System.out.printf("Keliling lingkaran: %.2f cm\n", keliling);     }      // utk itung l n k segitiga     public static void segitiga(double a, double b, double c) {         double keliling = a + b + c;         double s = keliling / 2; // Setengah dari keliling         double luas = Math.sqrt(s * (s - a) * (s - b) * (s - c)); // Rumus Heron         System.out.printf("Keliling segitiga: %.2f cm\n", keliling);         System.out.printf("Luas segitiga: %.2f cm2\n", luas);     }      public static void main(String[] args) {         @SuppressWarnings("resource")         Scanner scanner = new Scanner(System.in);         int pilihan;         double a, b, c, r, panjang, lebar;          while (true) {             System.out.println("\nMenu:");             System.out.println("1. Menghitung luas dan keliling persegi panjang");             System.out.println("2. Menghitung luas dan keliling lingkaran");             System.out.println("3. Menghitung luas dan keliling segitiga");             System.out.print("Pilihan anda: ");             pilihan = scanner.nextInt();              switch (pilihan) {                 case 1:                     System.out.print("Masukkan panjang: ");                     panjang = scanner.nextDouble();                     System.out.print("Masukkan lebar: ");                     lebar = scanner.nextDouble();                     persegiPanjang(panjang, lebar);                     break;                  case 2:                     System.out.print("Masukkan jari-jari (r): ");                     r = scanner.nextDouble();                     lingkaran(r);                     break;                  case 3:                     System.out.print("Masukkan sisi a: ");                     a = scanner.nextDouble();                     System.out.print("Masukkan sisi b: ");                     b = scanner.nextDouble();                     System.out.print("Masukkan sisi c: ");                     c = scanner.nextDouble();                     segitiga(a, b, c);                     break;                  default:                     System.out.println("Data tak ditemukan, program dihentikan ...");                     return;             }         }     } }   Screenshot 
  Penjelasan Program Java ini menghitung luas dan keliling dari persegi panjang, lingkaran, dan segitiga berdasarkan pilihan pengguna. Setelah pengguna memasukkan dimensi seperti panjang dan lebar untuk persegi panjang, jari-jari untuk lingkaran, atau sisi-sisi untuk segitiga, program menggunakan rumus geometri yang sesuai untuk menghitung luas dan keliling. Hasilnya kemudian ditampilkan, memberikan informasi lengkap tentang luas dan keliling dari bentuk yang dipilih pengguna.  2. Susun program dengan tampilan sebagai berikut dengan menggunakan metode if-else!  Syntax   Taruh Hasil Codingan di sini, font : courier 12   package PRAKTIKUM;  import java.util.Scanner;  public class TPraktikum2 {       public static void main(String[] args) {         Scanner scanner = new Scanner(System.in);                  System.out.print("Berat badan (kg): ");         double berat = scanner.nextDouble();                  System.out.print("Tinggi badan (m): "); 
        double tinggi = scanner.nextDouble();                  double imt = berat / (tinggi * tinggi);                  String kriteria;         if (imt <= 18.5) {             kriteria = "kurus";         } else if (imt <= 25) {             kriteria = "normal";         } else if (imt <= 30) {             kriteria = "gemuk";         } else {             kriteria = "kegemukan";         }                  System.out.printf("IMT = %.2f Termasuk %s\n", imt, kriteria);     } }  Screenshot 
  Penjelasan Program Java ini menghitung Indeks Massa Tubuh (IMT) dan menentukan kriteria berat badan berdasarkan nilai IMT. IMT dihitung dengan rumus IMT = berat / (tinggi * tinggi) menggunakan berat badan dalam kilogram dan tinggi badan dalam meter. Setelah IMT dihitung, program menggunakan logika if-else untuk menentukan kategori berat badan. Jika 
IMT kurang dari atau sama dengan 18,5, pengguna dianggap "kurus". Jika IMT berada antara 18,5 dan 25, pengguna dianggap memiliki berat badan "normal". Untuk IMT antara 25 dan 30, pengguna dianggap "gemuk", sedangkan IMT di atas 30 menunjukkan "kegemukan". Program kemudian menampilkan nilai IMT yang telah dihitung beserta kategorinya dengan format dua angka desimal.  3. Susun program untuk masalah pengajian sebagai berikut: Masukan yang dibutuhkan oleh program adalah: jumlah jam kerja tiap minggu. Keluaran program adalah: total upah dari pegawai tertentu.  Syntax   package PRAKTIKUM;  import java.util.Scanner;  public class TPraktikum3 {     public static void main(String[] args) {         final int upahPerJam = 5000;         final int upahLemburPerJam = 6000;         final int dendaPerJam = 1000;         final int batasMaksimalJamKerja = 60;         final int batasMinimalJamKerja = 50;                  Scanner scanner = new Scanner(System.in);                  System.out.print("Jam kerja: ");         int jamKerja = scanner.nextInt();                  int upah = 0;         int lembur = 0;         int denda = 0;         int total = 0;          if (jamKerja > batasMaksimalJamKerja) {             upah = batasMaksimalJamKerja * upahPerJam;             lembur = (jamKerja - batasMaksimalJamKerja) * upahLemburPerJam;         } else if (jamKerja >= batasMinimalJamKerja) {             upah = jamKerja * upahPerJam;         } else {             upah = jamKerja * upahPerJam;             denda = (batasMinimalJamKerja - jamKerja) * dendaPerJam;         }                  total = upah + lembur - denda;          System.out.println("Upah = Rp. " + upah);         System.out.println("Lembur = Rp. " + lembur);         System.out.println("Denda = Rp. " + denda);         System.out.println("---------------------");         System.out.println("Total = Rp. " + total);     } }  Screenshot  
 Penjelasan Program ini dirancang untuk menghitung total upah pegawai berdasarkan jam kerja per minggu dengan menerapkan aturan tertentu. Jika pegawai bekerja hingga batas maksimum 60 jam per minggu, mereka mendapatkan upah reguler sebesar Rp. 5000 per jam. Namun, apabila pegawai bekerja lebih dari 60 jam, kelebihan jam tersebut dihitung sebagai lembur dengan tarif Rp. 6000 per jam. Sebaliknya, jika jam kerja pegawai berada di bawah batas minimal 50 jam, mereka dikenakan denda sebesar Rp. 1000 per jam untuk setiap jam yang kurang dari batas minimal. Program ini kemudian menghitung total upah dengan menjumlahkan upah reguler dan upah lembur, lalu mengurangi denda jika ada, dan menampilkan hasil akhirnya. 
