 LAPORAN PRAKTIKUM PEMROGRAMAN DASAR 
 BAB  :   SELEKSI KONDISI 
 NAMA  :   FAZLE ADYUT A UT OMO 
 NIM  :   2451502001 11042 
 ASISTEN  :   BRAHMANTIO JA TI PAMBUDI 
 ARAR YA PRAMADANI ALIEF RAHMAN 
 TGL PRAKTIKUM  :   02/10/2024 
 2.5 Data dan Analisis Hasil Per cobaan 
 2.5.1 Conditional Statement 
 Pertanyaan 
 1.  Jalankan file constAss.java dan benahi jika menemukan kesalahan! 
 Syntax 
 public class constAss { 
 public static void main(String[] args){ 
 String s = "filkom"; 
 String val = (s=="filkom")? "Brawijaya": ""; 
 System.out.println(s+" "+val); 
 } 
 } 
 Screenshot 
 Penjelasan 
 Terdapat terdapat kesalahan logika. Seharusnya jika yang diinginkan merupakan string 
 kosong tidak perlu menulis null di dalam petik, cukup gunakan literal  “”  saja. 
 Pertanyaan 
 2.  Ubah kode di atas pada baris ke empat dengan mengubah tipe data String menjadi int, 
 amati yang terjadi kemudian jelaskan! 
 Syntax 
 public class constAss { 
 public static void main(String[] args){ 
 String s = "filkom"; 
 int val = (s=="filkom") ? "Brawijaya" : ""; 
 System.out.println(s+" "+val); 
 } 
 } 
 Screenshot 
 Penjelasan 
 Ditemukan kesalahan syntax pada saat kompilasi oleh compiler karena baris 4 berusaha 
 memasukkan literal String ke variabel bertipe data integer . 
 Pertanyaan 
 3.  Tambahkan kode di bawah baris 5 dengan menambahkan program yang meminta 
 input user dengan memasukkan nama dan nim masing-masing mahasiswa dan jika 
 benar maka akan mencetak nama dan nim mahasiswa, jika salah maka mencetak 
 “input nama salah” jika memasukkan nama yang salah, “input nim salah” jika 
 memasukkan nim yang salah. 
 Syntax 
 import java.util.Scanner; 
 public class constAss { 
 public static void main(String[] args){ 
 String s = "filkom"; 
 String val = (s=="filkom") ? "Brawijaya" : ""; 
 System.out.println(s+" "+val); 
 Scanner scanner = new Scanner(System.in); 
 String nama = scanner.nextLine(); 
 String nim = scanner.nextLine(); 
 scanner.close(); 
 boolean isNamaCorrect = 
 nama.equalsIgnoreCase("Fazle Adyuta Utomo"); 
 boolean isNimCorrect = 
 nim.equals("245150200111042"); 
 System.out.println(isNamaCorrect ? nama : "input 
 nama salah"); 
 System.out.println(isNimCorrect ? nim : "input 
 nim salah"); 
 } 
 } 
 Screenshot 
 Penjelasan 
 Program ini akan meminta user memasukkan nama lalu nim. Program lalu akan memeriksa 
 apakah nama yang dimasukkan sama dengan nama praktikan tanpa membedakan huruf 
 kapital lalu program juga akan memeriksa apakah nim yang dimasukkan sama dengan nim 
 praktikan. Pada eksekusi pertama user memasukkan nama dan nim dengan benar sehingga 
 program menampilkan ulang nama dan nim yang telah dimasukkan. Pada eksekusi kedua, 
 user memasukkan nama dan nim yang salah sehingga program menampilkan pesan 
 masing-masing kesalahan 
 Method equals dan equalsIgnoreCase digunakan sehingga Java membandingkan isi dari 
 string dan bukan alamat datanya. Method equalsIgnoreCase digunakan agar Java tidak 
 membedakan huruf kapital dan tidak. 
 Pertanyaan 
 4.  Buat program yang meminta untuk memasukkan nama dan password kemudian 
 program akan meminta user untuk memasukkan nama dan password sesuai input 
 sebelumnya. Jika benar maka program akan mencetak informasi biodata mahasiswa 
 dan jika salah maka program akan mencetak “data tak ditemukan”. 
 Syntax 
 import java.util.Scanner; 
 public class constAss { 
 public static void main(String[] args){ 
 String s = "filkom"; 
 String val = (s=="filkom") ? "Brawijaya" : ""; 
 System.out.println(s+" "+val); 
 Scanner scanner = new Scanner(System.in); 
 String namaString = scanner.nextLine(); 
 String passwordString = scanner.nextLine(); 
 String biodataString = "Biodata Mahasiswa\n" + 
 "nama: " + namaString; 
 System.out.println();  String namaString2 = scanner.nextLine(); 
 String passwordString2 = scanner.nextLine(); 
 System.out.println(); 
 String output = namaString2.equals(namaString) 
 && passwordString2.equals(passwordString) 
 ? biodataString 
 : "data tak ditemukan"; 
 System.out.println(output); 
 scanner.close(); 
 } 
 } 
 Screenshot 
 Penjelasan 
 Program diatas akan meminta user menginput nama dan password sebanyak dua kali. Jika 
 nama dan password pada input pertama dan kedua sama, program akan mencetak biodata 
 mahasiswa yang berisi nama mahasiswa yang didapat dari input nama pertama. Method 
 String.equals  digunakan untuk membandingkan isi dari  kedua string. 
 2.5.2 If Else 
 5.  Jalankan file seleksi1.java dan benahi jika menemukan kesalahan! 
 Syntax 
 import java.util.Scanner; 
 public class seleksi1 { 
 public static void main(String[] args){ 
 Scanner in = new Scanner(System.in); 
 System.out.print("masukkan nilai: "); 
 int nilai = in.nextInt(); 
 in.close(); /* perbaikan */ 
 if (nilai > 60) 
 System.out.println("Anda lulus"); 
 else if (nilai >= 40) 
 System.out.println("Anda harus mengulang 
 !"); 
 else{ 
 System.out.println("Anda gagal"); 
 } 
 } 
 } 
 Screenshot  Penjelasan 
 Tidak terjadi error namun terdapat warning pada IDE kareena Scanner tidak ditutup yang 
 berpotensi menyebabkan memory leak. Setelah semua input diambil ditambahkan 
 Scanner .close() untuk menghilangkan warning. 
 Pertanyaan 
 6.  Masukkan nilai 30, 60 dan 80 saat program dijalankan, dan jawablah dengan 
 screenshot hasil keluaran dari program! 
 Syntax 
 import java.util.Scanner; 
 public class seleksi1 { 
 public static void main(String[] args){ 
 Scanner in = new Scanner(System.in); 
 System.out.print("masukkan nilai: "); 
 int nilai = in.nextInt(); 
 in.close(); /* perbaikan */ 
 if (nilai > 60) 
 System.out.println("Anda lulus"); 
 else if (nilai >= 40) 
 System.out.println("Anda harus mengulang 
 !"); 
 else{ 
 System.out.println("Anda gagal"); 
 } 
 } 
 } 
 Screenshot 
 Penjelasan 
 Saat nilai 30, program akan mengeksekusi blok else. Saat nilai 60, program akan 
 mengeksekusi blok else if karena 60 >= 40 tetapi tidak memenuhi 60 > 60. Saat nilai 90, 
 program akan mengeksekusi blok if karena 90 > 60. 
 Pertanyaan 
 7.  Pada baris 9, ubahlah kode program menjadi System.out.println("Nilai kurang!");, 
 pengaruh apa yang ditimbulkan setelah dilakukan pengubahan kode di atas! 
 Syntax 
 import java.util.Scanner; 
 public class seleksi1 { 
 public static void main(String[] args){ 
 Scanner in = new Scanner(System.in); 
 System.out.print("masukkan nilai: "); 
 int nilai = in.nextInt(); 
 if (nilai > 60) 
 System.out.println("Anda lulus"); 
 else if (nilai >= 40) 
 System.out.println("Nilai kurang!"); 
 else{ 
 System.out.println("Anda gagal"); 
 } 
 in.close(); /* perbaikan */ 
 } 
 } 
 Screenshot  Penjelasan 
 Perintah akan menimbulkan error karena blok if yang lebih dari 1 baris harus diapit oleh 
 kurung kurawal sebagai penanda blok program. 
 Namun, jika yang diubah adalah baris ke-10, pada saat nilai memenuhi  40 <= nilai <= 60. 
 Program akan mengeksekusi blok else if sehingga akan mencetak “Nilai kurang!” pada 
 terminal. 
 2.5.3 Nested If 
 Pertanyaan 
 8.  Jalankan file seleksi2.java dan benahi jika menemukan kesalahan! 
 Syntax 
 import java.util.Scanner; 
 public class seleksi2 { 
 public static void main(String[] args) { 
 Scanner in = new Scanner(System.in); 
 System.out.print("masukkan nilai: "); 
 int nilai = in.nextInt(); 
 in.close(); /* perbaikan */ 
 if (nilai * 2 < 50) { 
 nilai += 10; 
 } 
 if (nilai <= 20) { 
 System.out.println("Filkom"); 
 if (nilai % 2 == 1) { 
 System.out.println("UB"); 
 } else { 
 System.out.println("Brawijaya"); 
 } 
 } else { 
 System.out.println("PTIIK"); 
 if (nilai % 2 == 1) { 
 System.out.println("UB"); 
 } else { 
 System.out.println("Brawijaya"); 
 } 
 } 
 } 
 } 
 Screenshot  Penjelasan 
 Tidak terjadi error namun terdapat warning pada IDE kareena Scanner tidak ditutup yang 
 berpotensi menyebabkan memory leak. Setelah semua input diambil ditambahkan 
 Scanner .close() untuk menghilangkan warning. 
 Pertanyaan 
 9.  Masukkan nilai 5, 20, 30 saat program dijalankan, jelaskan alur jalan program dan 
 beri screenshot keluaran dari program! 
 Syntax 
 import java.util.Scanner; 
 public class seleksi2 { 
 public static void main(String[] args) { 
 Scanner in = new Scanner(System.in); 
 System.out.print("masukkan nilai: "); 
 int nilai = in.nextInt(); 
 in.close(); /* perbaikan */ 
 if (nilai * 2 < 50) { 
 nilai += 10; 
 } 
 if (nilai <= 20) { 
 System.out.println("Filkom"); 
 if (nilai % 2 == 1) { 
 System.out.println("UB"); 
 } else { 
 System.out.println("Brawijaya"); 
 } 
 } else { 
 System.out.println("PTIIK"); 
 if (nilai % 2 == 1) { 
 System.out.println("UB"); 
 } else { 
 System.out.println("Brawijaya"); 
 } 
 } 
 } 
 } 
 Screenshot  Penjelasan 
 Pada saat nilai = 5, karena 5 * 2 < 50,  nilai ditambah 10 sehingga nilai = 15, karena nilai <= 
 20, “Filkom” dicetak dan karena nilai ganjil, “UB” dicetak. 
 Pada saat nilai = 20, karena 20 * 2 < 50, nilai ditambah 10 sehingga nilai = 30, karena nilai 
 tidak memenuhi nilai <= 20, “PTIIK” dicetak dan karena nilai genap, “Brawijaya” dicetak. 
 Pada saat nilai = 30, karena nilai tidak memenuhi nilai <= 20, “PTIIK” dicetak dan karena 
 nilai genap, “Brawijaya” dicetak. 
 Pertanyaan 
 10.  Ubah kode di atas dengan memanfaatkan operasi and! 
 Syntax 
 import java.util.Scanner; 
 public class seleksi2 { 
 public static void main(String[] args) { 
 Scanner in = new Scanner(System.in); 
 System.out.print("masukkan nilai: "); 
 int nilai = in.nextInt(); 
 in.close(); /* perbaikan */ 
 if (nilai * 2 < 50) { 
 nilai += 10; 
 } 
 if (nilai <= 20 && nilai % 2 == 1) { 
 System.out.println("Filkom"); 
 System.out.println("UB"); 
 } else if (nilai <= 20 && nilai % 2 != 1) { 
 System.out.println("Filkom"); 
 System.out.println("Brawijaya"); 
 } else if (nilai > 20 && nilai % 2 == 1) { 
 System.out.println("PTIIK"); 
 System.out.println("UB"); 
 } else if (nilai > 20 && nilai != 1) { 
 System.out.println("PTIIK"); 
 System.out.println("Brawijaya"); 
 } 
 } 
 } 
 Screenshot  Penjelasan 
 Logika pada nested if dapat ditulis ulang menggunakan operator and (&&) karena memiliki 
 logika yang mirip. Kode blok pada nested if hanya akan dieksekusi jika semua kondisi if 
 parent nya terpenuhi. Operator and juga hanya akan mengembalikan nilai true ketika semua 
 kondisi terpenuhi sehingga kode blok hanya akan tereksekusi jika semua kondisi terpenuhi. 
 2.5.4 Switch Case 
 Pertanyaan 
 11.  Jalankan file seleksi3.java dan benahi jika menemukan kesalahan! 
 Syntax 
 import java.util.Scanner; 
 public class seleksi3 { 
 public static void main(String[] args) { 
 Scanner in = new Scanner(System.in); 
 int uang; 
 System.out.println("Tipe Mata uang yang 
 tersedia"); 
 System.out.println("1. Dolar - USA (kurs USD 1 = 
 Rp 8000,-)"); 
 System.out.println("2. Yen - Jepang (kurs JPY 1 
 = Rp 4000,-)"); 
 System.out.println("3. Poundsterling - Inggris 
 (kurs 1 Poundsterling = Rp. 10.500, -)"); 
 System.out.println("4. Euro - MEE (kurs EUR 1 = 
 Rp. 8000,- )"); 
 System.out.println("5. Riyal - Arab Saudi (kurs 
 1 Riyal = Rp. 1100,-)"); 
 System.out.print("Masukkan jenis mata uang anda: 
 "); 
 int pilihan = in.nextInt(); 
 switch (pilihan) { 
 case 1: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Dolar Amerika Serikat"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam dolar): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*8000) + ",-"); 
 break; 
 case 2: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Yen Jepang"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam Yen): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*4000) + ",-"); 
 break; 
 case 3: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Poundsterling Inggris"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam dolar): ");  uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*10500) + ",-"); 
 break; 
 case 4: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Euro MEE"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam Euro): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*8000) + ",-"); 
 break; 
 case 5: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Riyal Arab Saudi"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam Riyal): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*1100) + ",-"); 
 break; 
 default: 
 System.out.println("data tak 
 ditemukan"); 
 } 
 in.close(); /* perbaikan */ 
 } 
 }  Screenshot 
 Penjelasan 
 Tidak terjadi error namun terdapat warning pada IDE kareena Scanner tidak ditutup yang 
 berpotensi menyebabkan memory leak. Setelah semua input diambil ditambahkan 
 Scanner .close() untuk menghilangkan warning. Program berhenti tanpa error setelah keluar 
 dari blok switch case setelah menemukan break statement. 
 Pertanyaan 
 12.  Pada baris 18,22,26,30 dan 34 hapus kode break, pengaruh apa yang terjadi setelah 
 pengubahan kode tersebut! 
 Syntax 
 import java.util.Scanner; 
 public class seleksi3 { 
 public static void main(String[] args) { 
 Scanner in = new Scanner(System.in); 
 int uang; 
 System.out.println("Tipe Mata uang yang 
 tersedia"); 
 System.out.println("1. Dolar - USA (kurs USD 1 = 
 Rp 8000,-)"); 
 System.out.println("2. Yen - Jepang (kurs JPY 1 
 = Rp 4000,-)"); 
 System.out.println("3. Poundsterling - Inggris 
 (kurs 1 Poundsterling = Rp. 10.500, -)"); 
 System.out.println("4. Euro - MEE (kurs EUR 1 = 
 Rp. 8000,- )"); 
 System.out.println("5. Riyal - Arab Saudi (kurs 
 1 Riyal = Rp. 1100,-)"); 
 System.out.print("Masukkan jenis mata uang anda: 
 "); 
 int pilihan = in.nextInt(); 
 switch (pilihan) { 
 case 1: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Dolar Amerika Serikat"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam dolar): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*8000) + ",-"); 
 case 2: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Yen Jepang"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam Yen): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*4000) + ",-"); 
 case 3: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Poundsterling Inggris"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam dolar): "); 
 uang = in.nextInt();  System.out.println("Uang yang diterima: 
 Rp " + (uang*10500) + ",-"); 
 case 4: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Euro MEE"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam Euro): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*8000) + ",-"); 
 case 5: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Riyal Arab Saudi"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam Riyal): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*1100) + ",-"); 
 default: 
 System.out.println("data tak 
 ditemukan"); 
 } 
 in.close(); /* perbaikan */ 
 } 
 } 
 Screenshot  Penjelasan 
 Tanba break statement switch case mengeksekusi semua case mulai dari case yang benar 
 hingga statement break atau hingga akhir switch case jika break tidak ditemukan. Sehingga 
 saat pilihan 1, program akan mengeksekusi case 1, 2, 3, 4 5, dan default secara berurutan dari 
 atas ke bawah. 
 Pertanyaan 
 13.  Apa perbedaan seleksi kondisi dengan menggunakan switch case dan if-else, dan 
 kapan kita harus menggunakan if-else dan kapan menggunakan switch case? 
 Syntax 
 import java.util.Scanner; 
 public class seleksi3 { 
 public static void main(String[] args) { 
 Scanner in = new Scanner(System.in); 
 int uang; 
 System.out.println("Tipe Mata uang yang 
 tersedia"); 
 System.out.println("1. Dolar - USA (kurs USD 1 = 
 Rp 8000,-)"); 
 System.out.println("2. Yen - Jepang (kurs JPY 1 
 = Rp 4000,-)"); 
 System.out.println("3. Poundsterling - Inggris 
 (kurs 1 Poundsterling = Rp. 10.500, -)"); 
 System.out.println("4. Euro - MEE (kurs EUR 1 = 
 Rp. 8000,- )"); 
 System.out.println("5. Riyal - Arab Saudi (kurs 
 1 Riyal = Rp. 1100,-)"); 
 System.out.print("Masukkan jenis mata uang anda: 
 "); 
 int pilihan = in.nextInt(); 
 switch (pilihan) { 
 case 1: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Dolar Amerika Serikat"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam dolar): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*8000) + ",-"); 
 break; 
 case 2: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Yen Jepang"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam Yen): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*4000) + ",-"); 
 break; 
 case 3: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Poundsterling Inggris"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam dolar): ");  uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*10500) + ",-"); 
 break; 
 case 4: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Euro MEE"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam Euro): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*8000) + ",-"); 
 break; 
 case 5: 
 System.out.println("Data diterima, jenis 
 valuta Anda: Riyal Arab Saudi"); 
 System.out.print("Masukkan banyak uang 
 anda(dalam Riyal): "); 
 uang = in.nextInt(); 
 System.out.println("Uang yang diterima: 
 Rp " + (uang*1100) + ",-"); 
 break; 
 default: 
 System.out.println("data tak 
 ditemukan"); 
 } 
 in.close(); /* perbaikan */ 
 } 
 }  Screenshot 
 Penjelasan 
 Switch case memiliki kode yang lebih mudah dibaca dan lebih ringkas sehingga cocok untuk 
 situasi yang memiliki banyak kondisi yang hanya perlu memeriksa apakah nilai sama. 
 Namun, Switch case tidak dapat digunakan untuk pemeriksaan kondisi selain persamaan 
 seperti pemeriksaan kondisi yang membutuhkan pemanggilan method. operator boolean 
 (&&, ||), operator komparasi (!=, ==, <, >, <=, >=) dan tipe data float sehingga pada skenario 
 ini penggunaan if-else diperlukan. 
 2.5.5 T ugas Praktikum 
 Syntax 
 import java.util.Scanner; 
 public class Luas { 
 public static void main(String[] args) { 
 Scanner scanner = new Scanner(System.in); 
 int pilihan, a, b, r; 
 double luas, keliling; 
 System.out.println("Menu:"); 
 System.out.println("1. menghitung luas dan keliling 
 persegi panjang"); 
 System.out.println("2. menghitung luas dan keliling 
 lingkaran"); 
 System.out.println("3. menghitung luas dan keliling 
 segitiga"); 
 System.out.println(); 
 System.out.print("Pilihan anda: "); 
 pilihan = scanner.nextInt(); 
 switch (pilihan) { 
 case 1: 
 System.out.print("Masukkan a: "); 
 a = scanner.nextInt(); 
 System.out.print("Masukkan b: "); 
 b = scanner.nextInt(); 
 System.out.println();  luas = a * b; 
 keliling = (a + b) * 2; 
 System.out.printf("Keliling segitiga : %.0f 
 cm%n", keliling); 
 System.out.printf("Luas segitiga : %.0f cm2%n", 
 luas); 
 break; 
 case 2: 
 System.out.print("Masukkan r: "); 
 r = scanner.nextInt(); 
 System.out.println(); 
 luas = Math.PI * r * r; 
 keliling = 2 * Math.PI * r; 
 System.out.printf("Keliling segitiga : %.0f 
 cm%n", keliling); 
 System.out.printf("Luas segitiga : %.0f cm2%n", 
 luas); 
 break; 
 case 3: 
 System.out.print("Masukkan a: "); 
 a = scanner.nextInt(); 
 System.out.print("Masukkan b: "); 
 b = scanner.nextInt(); 
 System.out.print("Masukkan r: "); 
 r = scanner.nextInt(); 
 System.out.println(); 
 luas = a * b / 2; 
 keliling = a + b + r;  System.out.printf("Keliling segitiga : %.0f 
 cm%n", keliling); 
 System.out.printf("Luas segitiga : %.0f cm2%n", 
 luas); 
 break; 
 default: 
 System.out.printf("Data tak ditemukan, program 
 dihentikan ..."); 
 break; 
 } 
 scanner.close(); 
 } 
 } 
 Screenshot 
 Penjelasan 
 User akan diminta menginput int yang dimasukkan ke variabel pilihan. Proses lalu 
 dilanjutkan ke blok program yang sesuai berdasarkan pilihan user menggunakan control flow 
 switch case. Ketika case yang sesuai ditemukan, minta input user , hitung luas dan keliling, 
 tampilkan data, lalu break untuk menghentikan program. Jika case tidak ditemukan, program 
 akan mengeksekusi blok setelah statement default yang akan menampilkan “data tidak 
 ditemukan”. 
 Syntax 
 import java.util.Scanner; 
 public class Imt { 
 public static void main(String[] args) { 
 Scanner scanner = new Scanner(System.in); 
 System.out.print("Berat badan (kg) : "); 
 double berat = scanner.nextDouble(); 
 System.out.print("Tinggi badan (m) : "); 
 double tinggi = scanner.nextDouble(); 
 scanner.close(); 
 double imt = berat / (tinggi * tinggi); 
 String label = "kegemukan"; 
 if (imt <= 18.5) { 
 label = "kurus"; 
 } else if (imt <= 25) { 
 label = "normal"; 
 } else if (imt < 30) { 
 label = "gemuk"; 
 } 
 System.out.printf("IMT = %f Termasuk %s%n", imt, 
 label); 
 } 
 } 
 Screenshot  Penjelasan 
 User diminta menginput berat dan tinggi lalu imt dikalkulasi menggunakan rumus berat / 
 (tinggi * tinggi). label lalu diberikan berdasarkan nilai dari imt menggunakan if-else 
 statement. Hasil lalu dicetak ke terminal. 
 Syntax 
 import java.util.Scanner; 
 public class Jam { 
 public static void main(String[] args) { 
 /* 
 • Batas kerja maksimal adalah 60 jam / minggu, 
 dengan upah Rp. 5000,- / jam. Kelebihan jam kerja 
 dari batas maksimum akan dianggap sebagai lembur 
 dengan upah Rp. 6000,- / jam. 
 • Batas kerja minimal adalah 50 jam / minggu. 
 Apabila pegawai mempunyai jam kerja di bawah 
 batas kerja minimal ini, maka akan dikenakan denda 
 sebesar Rp. 1000, - / jam. 
 */ 
 Scanner scanner = new Scanner(System.in); 
 System.out.printf("Jam kerja : "); 
 int jam = scanner.nextInt(); 
 scanner.close(); 
 int jamPokok = jam < 60 ? jam : 60; 
 int pokok = jamPokok * 5000; 
 int jamLembur = jam - 60; 
 jamLembur = jamLembur > 0 ? jamLembur : 0; 
 int lembur = jamLembur * 6000; 
 int jamKurang = 50 - jam; 
 jamKurang = jamKurang > 0 ? jamKurang : 0; 
 int denda = jamKurang * 1000; 
 System.out.printf("Upah = Rp. %d%n", pokok); 
 System.out.printf("Lembur = Rp. %d%n", lembur); 
 System.out.printf("Denda = Rp. %d%n", denda); 
 System.out.println("---------------------"); 
 System.out.printf("Total = Rp. %d%n", pokok + lembur 
 - denda); 
 } 
 }  Screenshot 
 Penjelasan 
 User diminta menginput jam kerja, program lalu menghitung jam pokok, lembur , dan kurang. 
 Dari ketiga jumlah jam tersebut akan dihitung upah (jam pokok * 5000), lembur (jam lembur 
 * 6000), dan denda (jam denda * 1000). Lalu, total dihitung dengan rumus upah + lembur - 
 denda. T erakhir , hail ditampilkan sesuai format. 
